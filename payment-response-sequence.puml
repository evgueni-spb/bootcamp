@startuml
skinparam  participant {
  BackgroundColor yellow
  BorderColor brown
}

actor "Job Scheduler"
participant EISUPaymentResponseJob
participant EISUReceiveCheckPaymentService
participant EISUReceiveEFTPaymentService
participant EISUPaymentResponseRouteBuilder
participant "SFTP component" #lightgray
participant EISUPaymentResponseProcessor
participant EISUCheckPaymentResponseMapperImpl
participant StreamFactory  #lightgray
participant BeanReader  #lightgray
participant AsyncTaskManager #moccasin
participant EISUPaymentResponseProcessingAdapter
participant EISUPaymentStagingService
participant PaymentLifecycleService  #moccasin
participant ClaimsAutomaticCloseFacade #moccasin
participant ProcessManagementService #moccasin


"Job Scheduler" ->o EISUPaymentResponseJob : run
EISUPaymentResponseJob -> EISUPaymentResponseJob ++: doExecute
EISUPaymentResponseJob -> EISUReceiveCheckPaymentService ++ : processFile
      EISUReceiveCheckPaymentService -->o EISUPaymentResponseRouteBuilder:configure
      EISUReceiveCheckPaymentService -->o "SFTP component":receive
      note over "SFTP component" #aqua : retry N times on fail with timeout M
      EISUReceiveCheckPaymentService --> EISUPaymentResponseProcessor ++ :process
      EISUPaymentResponseProcessor -> EISUPaymentResponseMapperImpl ++ :map
      note over EISUPaymentResponseMapperImpl #aqua :payment response CHECK mapping xml file

      EISUPaymentResponseMapperImpl ->o StreamFactory :createReader
      EISUPaymentResponseMapperImpl --> BeanReader ++ :read
      return
      return

      loop "all check payments"
       EISUPaymentResponseProcessor  --> EISUPaymentStagingService ++:updateStagingRecord
       return
       EISUPaymentResponseProcessor -->o AsyncTaskManager:addTaskToQueue
            AsyncTaskManager --> EISUPaymentResponseProcessingAdapter ++:handleTask


            opt should update status
            EISUPaymentResponseProcessingAdapter  --> PaymentLifecycleService ++:executeAction
            return
            end

            opt "should close claim"
            EISUPaymentResponseProcessingAdapter  --> ClaimsAutomaticCloseFacade ++:closeClaimAutomatically
            return
            end

            opt "should create a followup task"
             EISUPaymentResponseProcessingAdapter  --> ProcessManagementService ++:create
             note over ProcessManagementService #aqua: followup upon automatically cleared payment
             return
            end
            return


      end


      return
      return



 EISUPaymentResponseJob -> EISUReceiveEFTPaymentService ++ : processFile
 EISUReceiveEFTPaymentService -->o EISUPaymentResponseRouteBuilder:configure
 EISUReceiveEFTPaymentService -->o "SFTP component":receive
 note over "SFTP component" #aqua : retry N times on fail with timeout M
 EISUReceiveEFTPaymentService --> EISUPaymentResponseProcessor ++ :process
  EISUPaymentResponseProcessor -> EISUPaymentResponseMapperImpl ++ :map
       note over EISUPaymentResponseMapperImpl #aqua :payment response CHECK mapping xml file

       EISUPaymentResponseMapperImpl ->o StreamFactory :createReader
       EISUPaymentResponseMapperImpl --> BeanReader ++ :read
       return
       return

       loop "all EFT payments"
        EISUPaymentResponseProcessor  --> EISUPaymentStagingService ++:updateStagingRecord
        return
        EISUPaymentResponseProcessor -->o AsyncTaskManager:addTaskToQueue
             AsyncTaskManager --> EISUPaymentResponseProcessingAdapter ++:handleTask


            opt should update status
            EISUPaymentResponseProcessingAdapter  --> PaymentLifecycleService ++:executeAction
            return
            end

            opt "should close claim"
            EISUPaymentResponseProcessingAdapter  --> ClaimsAutomaticCloseFacade ++:closeClaimAutomatically
            return
            end

            opt "should create a followup task"
             EISUPaymentResponseProcessingAdapter  --> ProcessManagementService ++:create
             note over ProcessManagementService #aqua: followup upon automatically cleared payment
             return
            end
             return


       end


       return
       return




@enduml